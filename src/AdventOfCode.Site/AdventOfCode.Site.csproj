<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <AWSProjectType>Lambda</AWSProjectType>
    <Description>Web app for solving Advent of Code.</Description>
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>
    <EnableRequestDelegateGenerator>true</EnableRequestDelegateGenerator>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <InvariantGlobalization>false</InvariantGlobalization>
    <NoWarn>$(NoWarn);CA2007</NoWarn>
    <OutputType>Exe</OutputType>
    <PublishSelfContained>true</PublishSelfContained>
    <RootNamespace>MartinCostello.AdventOfCode.Site</RootNamespace>
    <TargetFramework>net8.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(PublishForAWSLambda)' == 'true' ">
    <AssemblyName>bootstrap</AssemblyName>
    <PublishReadyToRun>true</PublishReadyToRun>
    <RuntimeIdentifier>linux-arm64</RuntimeIdentifier>
    <SelfContained>true</SelfContained>
    <TieredCompilation>false</TieredCompilation>
  </PropertyGroup>
  <PropertyGroup>
    <!-- TODO Remove if https://github.com/dotnet/sdk/issues/40500 implemented or when no longer only in nightly -->
    <ContainerBaseImage>mcr.microsoft.com/dotnet/nightly/runtime-deps:8.0-noble-chiseled-extra</ContainerBaseImage>
    <ContainerFamily>noble-chiseled-extra</ContainerFamily>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Amazon.Lambda.AspNetCoreServer.Hosting" />
    <PackageReference Include="Amazon.Lambda.RuntimeSupport" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" PrivateAssets="all" />
    <PackageReference Include="NSwag.AspNetCore" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\AdventOfCode\AdventOfCode.csproj" />
  </ItemGroup>
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.InteropServices.GuidAttribute">
      <_Parameter1>ec13ef2b-d4c6-43c0-9ed0-9b5832b70154</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
  <ItemGroup>
    <ContainerPort Include="8080" Type="tcp" />
    <Content Update="coverage\**;package.json;package-lock.json;tsconfig.json" CopyToPublishDirectory="Never" />
    <None Remove="scripts\ts\**\*.ts" />
    <TypeScriptCompile Include="scripts\ts\**\*.ts" />
  </ItemGroup>
  <ItemGroup>
    <None Include="aws-lambda-tools-defaults.json;serverless.template" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <Target Name="BundleAssets" BeforeTargets="BeforeBuild">
    <Exec Command="npm ci" Condition=" !Exists('$(MSBuildThisFileDirectory)\node_modules') AND '$(GITHUB_ACTIONS)' != '' " />
    <Exec Command="npm install" Condition=" !Exists('$(MSBuildThisFileDirectory)\node_modules') AND '$(GITHUB_ACTIONS)' == '' " />
    <Exec Command="npm run publish" Condition=" !Exists('$(MSBuildThisFileDirectory)\wwwroot\static\js\main.js') " />
  </Target>
  <ItemGroup Condition=" '$(PublishForAWSLambda)' == 'true' ">
    <PackageReference Include="Microsoft.ICU.ICU4C.Runtime" />
  </ItemGroup>
  <Target Name="SetAppLocalIcuVersion" BeforeTargets="Compile" Condition=" '$(PublishForAWSLambda)' == 'true' ">
    <ItemGroup>
      <RuntimeHostConfigurationOption Condition=" '%(PackageVersion.Identity)' == 'Microsoft.ICU.ICU4C.Runtime' " Include="System.Globalization.AppLocalIcu" Value="%(PackageVersion.Version)" />
    </ItemGroup>
  </Target>
  <Target Name="SetGitHubContainerOutputs" AfterTargets="PublishContainer" Condition=" '$(GITHUB_OUTPUT)' != '' AND '$(ContainerRegistry)' != '' ">
    <PropertyGroup>
      <_ContainerImage>$(ContainerRegistry)/$(ContainerRepository)</_ContainerImage>
      <_ContainerImage>$(_ContainerImage.ToLowerInvariant())</_ContainerImage>
      <_ContainerTag>$(_ContainerImage):github-$(GITHUB_RUN_NUMBER)</_ContainerTag>
    </PropertyGroup>
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="container-digest=$(GeneratedContainerDigest)" />
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="container-image=$(_ContainerImage)" />
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="container-tag=$(_ContainerTag)" />
  </Target>
</Project>
